{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vaishnavi\\\\OneDrive\\\\Desktop\\\\Phase_2\\\\trackfit_fe\\\\src\\\\ForgotPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // ✅ Import useNavigate\nimport \"./ForgotPassword.css\";\nimport image from \"./image 1.png\"; // Use the actual image path\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgotPassword = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const navigate = useNavigate(); // ✅ Initialize navigate function\n\n  const handleReset = () => {\n    // Simulating password reset logic (normally, you'd send an API request here)\n    console.log(`Password reset email sent to: ${email}`);\n\n    // Redirect to Reset Password Confirmation Page\n    navigate(\"/RequestConfirmation\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forgot-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forgot-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forgot-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Forgot Password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Enter your email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reset-btn\",\n          onClick: handleReset,\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"login-text\",\n          children: [\"Remember Password? \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/signin\",\n            children: \"Login here.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forgot-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          alt: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPassword, \"BtHh1nUgD6Q6OqHFh/Muz7TKLH4=\", false, function () {\n  return [useNavigate];\n});\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","useNavigate","image","jsxDEV","_jsxDEV","ForgotPassword","_s","email","setEmail","navigate","handleReset","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","href","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Vaishnavi/OneDrive/Desktop/Phase_2/trackfit_fe/src/ForgotPassword.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\"; // ✅ Import useNavigate\r\nimport \"./ForgotPassword.css\";\r\nimport image from \"./image 1.png\"; // Use the actual image path\r\n\r\nconst ForgotPassword = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const navigate = useNavigate(); // ✅ Initialize navigate function\r\n\r\n  const handleReset = () => {\r\n    // Simulating password reset logic (normally, you'd send an API request here)\r\n    console.log(`Password reset email sent to: ${email}`);\r\n\r\n    // Redirect to Reset Password Confirmation Page\r\n    navigate(\"/RequestConfirmation\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"forgot-container\">\r\n      <div className=\"forgot-box\">\r\n        {/* Left Side - Form */}\r\n        <div className=\"forgot-form\">\r\n          <h2>Forgot Password?</h2>\r\n          <p>Email</p>\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <button className=\"reset-btn\" onClick={handleReset}>\r\n            Reset Password\r\n          </button>\r\n          <p className=\"login-text\">\r\n            Remember Password? <a href=\"/signin\">Login here.</a>\r\n          </p>\r\n        </div>\r\n\r\n        {/* Right Side - Image */}\r\n        <div className=\"forgot-image\">\r\n          <img src={image} alt=\"Reset Password\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAChD,OAAO,sBAAsB;AAC7B,OAAOC,KAAK,MAAM,eAAe,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACxB;IACAC,OAAO,CAACC,GAAG,CAAC,iCAAiCL,KAAK,EAAE,CAAC;;IAErD;IACAE,QAAQ,CAAC,sBAAsB,CAAC;EAClC,CAAC;EAED,oBACEL,OAAA;IAAKS,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eAC/BV,OAAA;MAAKS,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAEzBV,OAAA;QAAKS,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1BV,OAAA;UAAAU,QAAA,EAAI;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzBd,OAAA;UAAAU,QAAA,EAAG;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACZd,OAAA;UACEe,IAAI,EAAC,OAAO;UACZC,WAAW,EAAC,kBAAkB;UAC9BC,KAAK,EAAEd,KAAM;UACbe,QAAQ,EAAGC,CAAC,IAAKf,QAAQ,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C,CAAC,eACFd,OAAA;UAAQS,SAAS,EAAC,WAAW;UAACY,OAAO,EAAEf,WAAY;UAAAI,QAAA,EAAC;QAEpD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTd,OAAA;UAAGS,SAAS,EAAC,YAAY;UAAAC,QAAA,GAAC,qBACL,eAAAV,OAAA;YAAGsB,IAAI,EAAC,SAAS;YAAAZ,QAAA,EAAC;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAGNd,OAAA;QAAKS,SAAS,EAAC,cAAc;QAAAC,QAAA,eAC3BV,OAAA;UAAKuB,GAAG,EAAEzB,KAAM;UAAC0B,GAAG,EAAC;QAAgB;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACZ,EAAA,CAxCID,cAAc;EAAA,QAEDJ,WAAW;AAAA;AAAA4B,EAAA,GAFxBxB,cAAc;AA0CpB,eAAeA,cAAc;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}